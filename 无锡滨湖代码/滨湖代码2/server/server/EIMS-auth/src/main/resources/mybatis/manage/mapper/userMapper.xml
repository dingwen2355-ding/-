<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.znv.manage.dao.UserServiceMapper">
    <!--通过<resultMap>映射实体类属性名和表的字段名对应关系 -->
    <resultMap type="com.znv.manage.bean.user.User" id="userMap">
        <id property="userId" column="user_id" />
        <result property="userName" column="user_name" />
        <result property="password" column="password" />
        <result property="departmentId" column="department_id" />
        <result property="roleId" column="role_id" />
        <result property="precinctTreeId" column="precinct_tree_id" />
        <result property="userType" column="user_type" />
        <result property="employeeId" column="employee_id" />
        <result property="trueName" column="true_name" />
        <result property="mobilePhone" column="mobile_phone" />
        <result property="email" column="e_mail" />
        <result property="phone" column="phone" />
        <result property="address" column="address" />
        <result property="userState" column="user_state" />
        <result property="errLoginTimes" column="err_login_times" />
        <result property="updateTime" column="updateTime" />
        <result property="description" column="description" />
        <result property="adminUser" column="admin_user" />
        <result property="fax" column="fax" />
        <result property="gender" column="gender" />
        <result property="userLevel" column="user_level" />
        <result property="loginClientType" column="login_client_type" />
        <result property="userImg" column="user_img" />
        <result property="userUrl" column="user_url" />
        <result property="systemFlag" column="system_flag" />
        <result property="createTime" column="createTime" />
        <result property="departmentName" column="department"/>
        <result property="roleName" column="role_name"/>
        <collection property="roles" ofType="com.znv.manage.bean.user.Role" column="role_id"
                     select="getRoles"></collection>
        <collection property="modules" ofType="com.znv.manage.bean.user.Module" column="role_id"
                    select="getModules"></collection>
    </resultMap>
    <!-- start 关联查询 role-->
    <resultMap type="com.znv.manage.bean.user.Role" id="roleMap">
        <result property="roleId" column="role_id" />
        <result property="roleName" column="role_name" />
        <result property="upRoleId" column="up_role_id" />
        <result property="description" column="description" />
        <result property="dataPermission" column="data_permission" />
    </resultMap>

    <select id="getRoles" resultMap="roleMap" parameterType="long">
      SELECT * FROM t_cfg_role
       WHERE role_id = #{role_id}
    </select>
    <!-- end 关联查询 role-->


    <!-- start 关联查询 module-->
    <select id="getModules" resultMap="moduleMap" parameterType="long">
    SELECT
        m.id as id,
        m.module_name as module_name,
        m.module_url as module_url,
        m.description as description,
        m.description as up_module_id
        FROM t_link_role_module rm,t_cfg_module m
        WHERE m.id=rm.module_id and rm.role_id = #{role_id};
    </select>
    <!-- end 关联查询 module-->

    <select id="queryUsers" resultType="map" resultMap="userMap">
        SELECT
        u.*,
        ifnull(t.precinct_name,'') streetName,
        ifnull(t.precinct_id,'') streetId,
        ifnull(t.precinct_kind,'') precinctKind,
        ifnull(t.region_name,'') regionName,
        tcp.precinct_name AS department,
        r.role_name,
        DATE_FORMAT(u.create_time,'%Y-%m-%d %H:%i:%s') as createTime,
        DATE_FORMAT(u.updatetime,'%Y-%m-%d %H:%i:%s') as updateTime
        FROM t_cfg_user u
        left join t_cfg_department p on u.department_id = p.id
        left join t_cfg_role r on u.role_id = r.role_id
        LEFT JOIN t_cfg_precinct t on u.street_id = t.precinct_id
        LEFT JOIN t_cfg_precinct tcp on tcp.precinct_id = cast(u.department_id as char)
        WHERE 1=1
        <if test="userIds != null">AND find_in_set(u.user_id,#{userIds})</if>
        <if test="userName != null">AND u.user_name = #{userName} </if>
        <if test="password != null">AND u.password = #{password} </if>
        <if test="precinctId!=null and precinctId!=''">
            and find_in_set(#{precinctId},u.precinct_tree_id)
        </if>
        <if test="departmentId != null">AND u.department_id = #{departmentId} </if>
        <if test="precinctName != null">AND LOCATE(#{precinctName}, tcp.precinct_name) <![CDATA[>]]> 0  </if>
        <if test="userType != null">AND u.user_type = #{userType} </if>
        <if test="employeeId != null">AND u.employee_id = #{employeeId} </if>
        <if test="trueName != null">AND LOCATE(#{trueName}, u.true_name) <![CDATA[>]]> 0 </if>
        <if test="mobilePhone != null">AND u.mobile_phone = #{mobilePhone} </if>
        <if test="email != null">AND u.e_mail = #{email} </if>
        <if test="phone != null">AND u.phone = #{phone} </if>
        <if test="address != null">AND u.address = #{address} </if>
        <if test="userState != null">AND u.user_state = #{userState} </if>
        <if test="errLoginTimes != null">AND u.err_login_times = #{errLoginTimes} </if>
        <if test="updateTime != null">AND u.updatetime = #{updateTime} </if>
        <if test="description != null">AND u.description = #{description} </if>
        <if test="adminUser != null">AND u.admin_user = #{adminUser} </if>
        <if test="fax != null">AND u.fax = #{fax} </if>
        <if test="gender != null">AND u.gender = #{gender} </if>
        <if test="userLevel != null">AND u.user_level = #{userLevel} </if>
        <if test="loginClientType != null">AND u.login_client_type = #{loginClientType} </if>
        <if test="userUrl != null">AND u.user_url = #{userUrl} </if>
        <if test="systemFlag != null">AND u.system_flag = #{systemFlag} </if>
        <if test="createTime != null">AND u.create_time = #{createTime} </if>
        <if test="roleId != null">AND find_in_set(u.role_id,#{roleId}) </if>
        order by u.user_id
    </select>

    <insert id="insertUser" parameterType="com.znv.manage.bean.user.User" useGeneratedKeys="true"
         keyProperty="userId" keyColumn="user_id">
        INSERT INTO t_cfg_user(user_name, password, department_id,
        street_id,
        role_id, precinct_tree_id,gender, user_type, employee_id, true_name, mobile_phone,
        e_mail, phone, address, user_state, updatetime, description, admin_user,
        fax, user_level, login_client_type, user_url, err_login_times,operation_userid)
        values(
        #{userName, jdbcType=VARCHAR},
        #{password, jdbcType=VARCHAR},
        #{departmentId, jdbcType=BIGINT},
        #{streetId, jdbcType=BIGINT},
        #{roleId,jdbcType=VARCHAR},
        #{precinctTreeId,jdbcType=VARCHAR},
        #{gender,jdbcType=VARCHAR},
        #{userType, jdbcType=INTEGER},
        #{employeeId, jdbcType=VARCHAR},
        #{trueName, jdbcType=VARCHAR},
        #{mobilePhone, jdbcType=VARCHAR},
        #{email, jdbcType=VARCHAR},
        #{phone, jdbcType=VARCHAR},
        #{address, jdbcType=VARCHAR},
        #{userState, jdbcType=INTEGER},
        #{updateTime, jdbcType=DATE},
        #{description, jdbcType=VARCHAR},
        #{adminUser, jdbcType=VARCHAR},
        #{fax, jdbcType=VARCHAR},
        #{userLevel, jdbcType=INTEGER},
        #{loginClientType, jdbcType=INTEGER},
        #{userUrl, jdbcType=VARCHAR},
        #{errLoginTimes, jdbcType=INTEGER},
        #{operationUserid, jdbcType=INTEGER}
        )
    </insert>

    <update id="updateUser" parameterType="map" useGeneratedKeys="false">
        UPDATE t_cfg_user
        <trim prefix="set" suffixOverrides="," suffix="where user_id = #{userId}">
            <if test="userName !=null">user_name = #{userName, jdbcType=VARCHAR}, </if>
            <if test="password !=null">password = #{password, jdbcType=VARCHAR}, </if>
            <if test="departmentId !=null">department_id = #{departmentId, jdbcType=BIGINT}, </if>
            <if test="userType !=null">user_type = #{userType, jdbcType=INTEGER}, </if>
            <if test="employeeId !=null">employee_id = #{employeeId, jdbcType=VARCHAR}, </if>
            <if test="roleId !=null">role_id = #{roleId, jdbcType=VARCHAR}, </if>
            <if test="precinctTreeId !=null">precinct_tree_id = #{precinctTreeId, jdbcType=VARCHAR}, </if>
            <if test="trueName !=null">true_name = #{trueName, jdbcType=VARCHAR}, </if>
            <if test="mobilePhone !=null">mobile_phone = #{mobilePhone, jdbcType=VARCHAR}, </if>
            <if test="email !=null">e_mail = #{email, jdbcType=VARCHAR}, </if>
            <if test="phone !=null">phone = #{phone, jdbcType=VARCHAR}, </if>
            <if test="address !=null">address = #{address, jdbcType=VARCHAR}, </if>
            <if test="userState !=null">user_state = #{userState, jdbcType=INTEGER}, </if>
            <if test="errLoginTimes !=null">err_login_times = #{errLoginTimes, jdbcType=INTEGER}, </if>
            <if test="updateTime !=null">updatetime = #{updateTime, jdbcType=DATE}, </if>
            <if test="description !=null">description = #{description, jdbcType=VARCHAR}, </if>
            <if test="adminUser !=null">admin_user = #{adminUser, jdbcType=VARCHAR}, </if>
            <if test="fax !=null">fax = #{fax, jdbcType=VARCHAR}, </if>
            <if test="gender !=null">gender = #{gender, jdbcType=INTEGER}, </if>
            <if test="userLevel !=null">user_level = #{userLevel, jdbcType=INTEGER}, </if>
            <if test="loginClientType !=null">login_client_type = #{loginClientType, jdbcType=INTEGER}, </if>
            <if test="userUrl !=null">user_url = #{userUrl, jdbcType=VARCHAR}, </if>
            <if test="systemFlag !=null">system_flag = #{systemFlag, jdbcType=INTEGER}, </if>
            <if test="streetId !=null">street_id = #{streetId, jdbcType=VARCHAR}, </if>
        </trim>
    </update>
    <delete id="deleteUsers" parameterType="map">
        DELETE FROM t_cfg_user
        WHERE 1=1
        <if test="userIds != null">and user_id in (${userIds}) </if>
        <if test="userName != null">and user_name = #{userName} </if>
        <if test="password !=null">and password = #{password} </if>
        <if test="departmentId !=null">and department_id = #{departmentId} </if>
        <if test="userType !=null">and user_type = #{userType} </if>
        <if test="employeeId !=null">and employee_id = #{employeeId} </if>
        <if test="trueName !=null">and true_name = #{trueName} </if>
        <if test="mobilePhone !=null">and mobile_phone = #{mobilePhone} </if>
        <if test="email !=null">and e_mail = #{email} </if>
        <if test="phone !=null">and phone = #{phone} </if>
        <if test="address !=null">and address = #{address} </if>
        <if test="userState !=null">and user_state = #{userState} </if>
        <if test="errLoginTimes !=null">and err_login_times = #{errLoginTimes} </if>
        <if test="updateTime !=null">and updatetime = #{updateTime} </if>
        <if test="description !=null">and description = #{description} </if>
        <if test="adminUser !=null">and admin_user = #{adminUser} </if>
        <if test="fax !=null">and fax = #{fax} </if>
        <if test="gender !=null">and gender = #{gender} </if>
        <if test="userLevel !=null">and user_level = #{userLevel} </if>
        <if test="loginClientType !=null">and login_client_type = #{loginClientType} </if>
        <if test="userUrl !=null">and user_url = #{userUrl} </if>
        <if test="systemFlag !=null">and system_flag = #{systemFlag} </if>
        <if test="createTime !=null">and create_time = #{createTime} </if>

    </delete>

    <!-- start user module -->
    <resultMap type="com.znv.manage.bean.user.Module" id="moduleMap">
        <id property="id" column="id" />
        <result property="moduleName" column="module_name" />
        <result property="moduleUrl" column="module_url" />
        <result property="description" column="description" />
        <result property="upModuleId" column="up_module_id" />
    </resultMap>

    <!--<select id="queryRelatedModules" parameterType="map" resultType="java.util.HashMap"-->
        <!--statementType="CALLABLE" useCache="false" resultMap="moduleMap">-->
        <!--<![CDATA[-->
            <!--call up_query_usermodulesbyuserid(#{userId,mode=IN,jdbcType=BIGINT})-->
        <!--]]>-->
    <!--</select>-->

    <select id="queryRelatedModules" resultType="com.znv.manage.bean.user.Module">
        SELECT
          *
         FROM
          t_cfg_module m
         WHERE
          m.id IN (
           SELECT
            rm.module_id
           FROM
            t_link_role_module rm
           WHERE
            rm.role_id = (select role_id from t_cfg_user u where u.user_id = #{userId})
          )
    </select>

    <!-- end user module -->

    <!-- start user role operation -->
    <insert id="addUserRoles" parameterType="map">
        INSERT INTO t_link_user_role (user_id, role_id) VALUES
        <foreach collection="roleIds" item="item" separator=",">
            (
            #{userId, jdbcType=VARCHAR},
            #{item, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <delete id="removeUserRoles" parameterType="map">
        DELETE FROM t_link_user_role
          WHERE 1=1
        <if test="userId!=null">and user_id = #{userId} </if>
        <if test="roleIds!=null">and role_id in (${roleIds}) </if>

    </delete>

    <select id="queryUserRoles" parameterType="map" resultType="com.znv.manage.bean.user.Role" resultMap="roleMap">
        SELECT * FROM t_cfg_role r JOIN t_link_user_role ur on r.role_id = ur.role_id
        WHERE user_id = #{userId}
        UNION
        SELECT * FROM t_cfg_role r1 JOIN t_link_usergroup_role ugr on r1.role_id = ugr.role_id
        WHERE usergroup_id in (SELECT u.usergroup_id from t_cfg_user u WHERE u.user_id = #{userId})
    </select>
    <!-- end user role operation -->

    <select id="changePassword">
        UPDATE t_cfg_user
        SET password = #{newPassword}
        WHERE user_id = #{userId};
    </select>

    <update id="changePasswordByName">
        UPDATE t_cfg_user
        SET password = #{newPassword}
        WHERE user_name = #{userName};
    </update>

    <select id="queryDepartment" resultType="java.util.Map">
        select
        id,
        department,
        department_alias,
        type,
        ifnull(address,'') as address,
        ifnull(telephone,'')as telephone,
        ifnull(precinct_id,'') as precinct_id,
        on_duty
        from t_cfg_department
        where 1=1
        <if test="id != null"> and id = #{id}</if>
        <if test="department != null"> and department like concat('%',#{department},'%') </if>
        <if test="type != null"> and id = #{type}</if>
        <if test="address != null"> and id = #{address}</if>
        <if test="precinct_id != null"> and id = #{precinct_id}</if>
        ORDER BY eorder ASC;
    </select>
    <select id="getToken" resultType="java.util.Map">
        SELECT
            a.user_name AS userName,
            CAST(a.department_id AS CHAR) departmentId,
            CAST(b.department AS CHAR) departmentName,
            CAST(c.role_id AS CHAR) roleId,
            CAST(c.precinct_tree_id AS CHAR) precinctTreeId,
            c.role_name roleName,
            CAST(c.up_role_id AS CHAR) upRoleId,
            c.description,
            CAST(c.data_permission AS CHAR) dataPermission,
            CAST(e.id AS CHAR) id,
            e.module_name moduleName,
            e.module_url moduleUrl,
            e.description,
            CAST(e.up_module_id AS CHAR) upModuleId
        FROM
            t_cfg_user a
        LEFT JOIN t_cfg_department b ON a.department_id = b.id
        LEFT JOIN t_cfg_role c ON a.role_id = c.role_id
        LEFT JOIN t_link_role_module d ON c.role_id = d.role_id
        RIGHT JOIN t_cfg_module e ON d.module_id = e.id
        WHERE
            user_id = #{userID}
    </select>

    <select id="getUserInfoByUserId" resultType="map" >
        SELECT
        ifnull(role_id,'') as roleId
        ,ifnull(operation_userid,'') as operationUserid
        ,ifnull(precinct_tree_id,'') as precinctTreeId
        ,user_name as userName
        ,user_id as userId
        ,ifnull(street_id,'') as streetId
        FROM t_cfg_user
        WHERE 1=1
        <if test="userId != null">and user_id =#{userId}</if>
        <if test="operationUserid != null">and operation_userid =#{operationUserid}</if>
    </select>

    <select id="compareRoleLevelByRoleId" resultType="String" >
        SELECT
        CASE
        WHEN a.level1=b.level2 THEN '1'
        WHEN a.level1>b.level2 THEN '2'
        WHEN a.level1&lt;b.level2 THEN '3'
        END AS result
        FROM
        (SELECT level level1
        FROM `t_cfg_role` WHERE role_id=#{roleId1}
        )a,
        (SELECT level level2
        FROM `t_cfg_role` WHERE role_id=#{roleId2}
        )b
    </select>

    <select id="getUserIdsByStreetId" resultType="String" >
        SELECT
              ifnull(GROUP_CONCAT(b.user_id),'') userId
        FROM
              t_cfg_user b,
              (
                SELECT street_id FROM `t_cfg_user`
                WHERE user_id=#{operationUserid}
              )a
        WHERE a.street_id=b.street_id
    </select>

    <select id="getUserInfoByUserIdSameStreet" resultType="map" >
        SELECT
             ifnull(b.precinct_tree_id,'') precinctTreeId
            ,b.user_id userId
            ,b.street_id streetId
         FROM
            t_cfg_user b,
            (SELECT
                    street_id
                    FROM t_cfg_user
                    WHERE 1=1
                    and user_id =#{userId}
            )a
        WHERE a.street_id=b.street_id
    </select>
	
	<select id="querySameStreetUser" resultType="String" >
        select user_name from t_cfg_user where street_id = (select street_id from t_cfg_user where user_id = #{userId})
    </select>
    
    <select id="queryBelongToAreaUser" resultType="String" >
        select user_name from t_cfg_user where operation_userid = #{userId}
    </select>

    <select id="getStreetIdByUserId" resultType="String" >
        select ifnull(street_id,'') as streetId
        from  t_cfg_user
        where user_id = #{userId}
    </select>

    <select id="getPrecinctAdminNum" resultType="int" >
        select count(1) count
        from  t_cfg_user
        where street_id = #{streetId} and role_id=#{roleId}
    </select>
    <select id="queryAuthToken" resultType="com.znv.manage.bean.user.AuthToken">
        select id,token,description
        from t_cfg_auth_token
        WHERE 1=1
        <if test="token != null">and token =#{token}</if>
    </select>
    <select id="isExistByUserName" resultType="java.lang.Integer">
        select count(*) from t_cfg_user where user_name=#{userName}
    </select>

    <select id="selectUserWithPrecinctPath" resultType="java.util.Map">
        select user_id userId,
               user_name userName,
               true_name trueName,
               precinct_tree_id precinctId,
               GetPrecinctPath(SUBSTRING_INDEX(precinct_tree_id, ',', 1)) precinctPath
        from t_cfg_user
        where 1=1
        <if test="trueName != null and trueName != ''">
            and true_name like concat('%',#{trueName},'%')
        </if>
    </select>


    <update id="updateUserState" parameterType="map" useGeneratedKeys="false">
        update t_cfg_user
        <trim prefix="set" suffixOverrides="," suffix="where user_id = #{userId}">
            <if test="userState !=null">user_state = #{userState, jdbcType=INTEGER}, </if>
            <if test="errLoginTimes !=null">err_login_times = #{errLoginTimes, jdbcType=INTEGER}, </if>
        </trim>
    </update>
</mapper>